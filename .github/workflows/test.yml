name: Testing

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: ~

env:
  CARGO_TERM_COLOR: always

jobs:

  test:
    name: Testing using Rust ${{ matrix.toolchain }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.canary }}
    strategy:
      matrix:
        canary: [false]
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        toolchain: ["1.74"] # Ensure MSRV is true.
        include: # Treat latest stable as canary.
          - canary: true
            os: macos-latest
            toolchain: stable
          - canary: true
            os: ubuntu-latest
            toolchain: stable
          - canary: true
            os: windows-latest
            toolchain: stable
    steps:

      - name: Checking out source code
        uses: actions/checkout@v4

      - id: toolchain
        name: Setting up Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          components: clippy,rustfmt
          toolchain: ${{ matrix.toolchain }}

      - name: Preparing caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.os }}-${{ steps.toolchain.outputs.cachekey }}

      - name: Checking source code formatting
        run: cargo fmt -- --check

      - name: Linting source code
        run: cargo clippy -- --deny warnings

      - name: Running unit and integration tests
        run: cargo test --all-features
